@model Egreeting.Models.Models.ScheduleSender
@using Egreeting.Domain
@using Egreeting.Models.Models

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Create";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        ScheduleSender management
        <small>Create</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li>Admin</li>
        <li><a href="@Url.Action("Index")">Schedule send ecard</a></li>
        <li class="active">Create</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">

    <div class="box box-primary">
        <div class="box-header">
            <h3 class="box-title">Create new schedule send ecard</h3>
        </div><!-- /.box-header -->
        <form action="@Url.Action("Create")" method="POST" role="form" enctype="multipart/form-data">
            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label for="EgreetingUserID">User</label>
                    @Html.DropDownList("EgreetingUserID", new SelectList((Dictionary<int, string>)ViewBag.EgreetingUsers, "Key", "Value"), new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="EcardID">Ecard</label>
                    @Html.DropDownList("EcardID", new SelectList((Dictionary<int, string>)ViewBag.Ecards, "Key", "Value"), new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ScheduleTime)
                    @Html.EditorFor(m => m.ScheduleTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "ScheduleTime", @id = "ScheduleTime" } })
                    @Html.ValidationMessageFor(model => model.ScheduleTime, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ScheduleType)
                    @Html.DropDownList("ScheduleType",
                       EnumHelper.GetSelectList(typeof(ScheduleType)),
                       "Select schedule type",
                       new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ScheduleType, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SenderName)
                    @Html.EditorFor(m => m.SenderName, new { htmlAttributes = new { @class = "form-control", @placeholder = "SenderName", @id = "SenderName" } })
                    @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.RecipientEmail)
                    @Html.EditorFor(m => m.RecipientEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "RecipientEmail", @id = "RecipientEmail" } })
                    @Html.ValidationMessageFor(model => model.RecipientEmail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SendSubject)
                    @Html.EditorFor(m => m.SendSubject, new { htmlAttributes = new { @class = "form-control", @placeholder = "SendSubject", @id = "SendSubject" } })
                    @Html.ValidationMessageFor(model => model.SendSubject, "", new { @class = "text-danger" })
                </div><div class="form-group">
                    @Html.LabelFor(m => m.SendMessage)
                    @Html.EditorFor(m => m.SendMessage, new { htmlAttributes = new { @class = "form-control", @placeholder = "SendMessage", @id = "SendMessage" } })
                    @Html.ValidationMessageFor(model => model.SendMessage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="box-footer">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button class="btn btn-primary" type="button" onclick="BackToIndex()">Cancel</button>
            </div>

        </form>
    </div>


</section><!-- /.content -->
</div><!-- /.content-wrapper -->
<!-- Main content -->

@section scripts{
    <script>
        function BackToIndex()
        {
            window.location.replace('@Url.Action("Index")');
        }
    </script>
}