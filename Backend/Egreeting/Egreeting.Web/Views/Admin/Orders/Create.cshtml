@model Egreeting.Models.Models.Order
@using Egreeting.Domain
@using Egreeting.Models.Models

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Create - Order";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Order management
        <small>Create</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li>Admin</li>
        <li><a href="@Url.Action("Index")">Order</a></li>
        <li class="active">Create</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">

    <div class="box box-primary">
        <div class="box-header">
            <h3 class="box-title">Create new order</h3>
        </div><!-- /.box-header -->
        <form action="@Url.Action("Create")" method="POST" role="form" enctype="multipart/form-data">
            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.AntiForgeryToken()
                <input type="hidden" name="ListEcardString" id="ListEcardString" value="" />
                <div class="form-group">
                    <label for="select-items">Ecards</label>
                    <select id="select-items" class="form-control" onchange="SelectMultiple(this)">
                        <option value=""></option>
                        @foreach (var ecard in ViewBag.Ecards as List<Ecard>)
                        {
                            <option value="@ecard.EcardID">@ecard.EcardName</option>
                        }
                    </select>
                </div>
                <div class="form-group" id="ListEcardBadge">
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SenderName)
                    @Html.EditorFor(m => m.SenderName, new { htmlAttributes = new { @class = "form-control", @placeholder = "SenderName", @id = "SenderName", @onblur = "CreateSlug()" } })
                    @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.RecipientEmail)
                    @Html.EditorFor(m => m.RecipientEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "RecipientEmail", @id = "RecipientEmail" } })
                    @Html.ValidationMessageFor(model => model.RecipientEmail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SendSubject)
                    @Html.EditorFor(m => m.SendSubject, new { htmlAttributes = new { @class = "form-control", @placeholder = "SendSubject", @id = "SendSubject" } })
                    @Html.ValidationMessageFor(model => model.SendSubject, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SendMessage)
                    @Html.EditorFor(m => m.SendMessage, new { htmlAttributes = new { @class = "form-control", @placeholder = "SendMessage", @id = "SendMessage" } })
                    @Html.ValidationMessageFor(model => model.SendMessage, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ScheduleTime)
                    <input type="datetime" name="ScheduleTime" class="form-control" value="" id="ScheduleTime" />
                    @Html.ValidationMessageFor(model => model.ScheduleTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="box-footer">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button class="btn btn-primary" type="button" onclick="BackToIndex()">Cancel</button>
            </div>

        </form>
    </div>


</section><!-- /.content -->
</div><!-- /.content-wrapper -->
<!-- Main content -->

@section scripts{
    <script>
        function SelectMultiple(e)
        {
            var ListRoleArray = $('#ListEcardString').val().split('-').filter(x => x.length > 0);
            if (!ListRoleArray.includes(e.value)) {
                ListRoleArray.push(e.value);
                var htmlresult = $('#select-items').find(":selected").text();
                var html = `<span class="badge badge-primary" style="background-color: blue" onclick="RemoveBadge(this)" value="`+e.value+`">` + htmlresult + `</span>`;
                $('#ListEcardBadge').append(html);
            };
            var ListRole = ListRoleArray.join('-');
            $('#ListEcardString').val(ListRole);
        }
        function RemoveBadge(e) {
            var roleRemove = $(e).attr('value');
            var ListRoleArray = $('#ListEcardString').val().split('-').filter(x => x.length > 0);
            if (ListRoleArray.includes(roleRemove)) {
                ListRoleArray = ListRoleArray.filter(x => x !== roleRemove);
            };
            var ListRole = ListRoleArray.join('-');
            $('#ListEcardString').val(ListRole);
            e.remove();
        }
        function BackToIndex()
        {
            window.location.href = ('@Url.Action("Index")');
        }
        $(function () {
            $("#ScheduleTime").datetimepicker({
                defaultDate: "11/1/2013 12:12",
                format: 'dd/mm/yyyy HH:mm',
            });
         });
    </script>
}