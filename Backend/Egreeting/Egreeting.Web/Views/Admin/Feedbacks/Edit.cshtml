@model Egreeting.Models.Models.FeedBack

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Create";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        FeedBack Management
        <small>Edit</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li>Admin</li>
        <li><a href="@Url.Action("Index")">Categories</a></li>
        <li class="active">Edit</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">

    <div class="box box-primary">
        <div class="box-header">
            <h3 class="box-title">Edit FeedBack</h3>
        </div><!-- /.box-header -->
        <form action="@Url.Action("Edit")" method="POST" role="form">
            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.AntiForgeryToken()
                <input type="hidden" name="FeedBackID" value="@Model.FeedBackID">
                <div class="form-group">
                    <label for="">FeedBack Name</label>
                    <input type="text" class="form-control" id="FeedBackName" placeholder="FeedBack name" name="FeedBackName" onblur="CreateSlug()" value="@Model.FeedBackName">
                    @Html.ValidationMessageFor(model => model.FeedBackName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="">FeedBack Slug</label>
                    <input type="text" class="form-control" id="FeedBackSlug" placeholder="FeedBack slug" name="FeedBackSlug" value="@Model.FeedBackSlug">
                    @Html.ValidationMessageFor(model => model.FeedBackSlug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="box-footer">
                <button type="submit" class="btn btn-primary">Submit</button>
                <button class="btn btn-primary" type="button" onclick="BackToIndex()">Cancel</button>
            </div>

        </form>
    </div>


</section><!-- /.content -->
</div><!-- /.content-wrapper -->
<!-- Main content -->

@section scripts{
    <script>
        function CreateSlug(){
            var title, slug;

            //Lấy text từ thẻ input title
            title = document.getElementById("FeedBackName").value;

           //Đổi chữ hoa thành chữ thường
            slug = title.toLowerCase();

            //Đổi ký tự có dấu thành không dấu
            slug = slug.replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a');
            slug = slug.replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e');
            slug = slug.replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i');
            slug = slug.replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o');
            slug = slug.replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u');
            slug = slug.replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y');
            slug = slug.replace(/đ/gi, 'd');
            //Xóa các ký tự đặt biệt
            slug = slug.replace(/\`|\~|\!|\@@|\#|\||\$|\%|\^|\&|\*|\(|\)|\+|\=|\,|\.|\/|\?|\>|\<|\'|\"|\:|\;|_/gi, '');
            //Đổi khoảng trắng thành ký tự gạch ngang
            slug = slug.replace(/ /gi, " - ");
            //Đổi nhiều ký tự gạch ngang liên tiếp thành 1 ký tự gạch ngang
            //Phòng trường hợp người nhập vào quá nhiều ký tự trắng
            slug = slug.replace(/\-\-\-\-\-/gi, '-');
            slug = slug.replace(/\-\-\-\-/gi, '-');
            slug = slug.replace(/\-\-\-/gi, '-');
            slug = slug.replace(/\-\-/gi, '-');
            //Xóa các ký tự gạch ngang ở đầu và cuối
            slug = '@@' + slug + '@@';
            slug = slug.replace(/\@@\-|\-\@@|\@@/gi, '');
            slug = slug.replace(/\s/g, '');
            //In slug ra textbox có id “slug”
            document.getElementById('FeedBackSlug').value = slug;
        }

        function BackToIndex()
        {
            window.location.replace('@Url.Action("Index")');
        }
    </script>
}
